[[plugins]]
repo = "nvim-treesitter/nvim-treesitter"
hook_post_update = "TSUpdate"
on_event = "BufRead"

[[plugins]]
repo = "nvim-lualine/lualine.nvim"
on_event = "VimEnter"

[[plugins]]
repo = "Shougo/dpp.vim"
on_path = "~/.cache/dpp/repos/github.com/Shougo/dpp.vim"

[[plugins]]
repo = "vim-denops/denops.vim"
on_event = "VimEnter"

[[plugins]]
repo = 'vim-denops/denops-shared-server.vim'

[[plugins]]
repo = "nvim-tree/nvim-web-devicons"
lazy = 0

[[plugins]]
repo = "nvim-tree/nvim-tree.lua"
depends = ["nvim-tree/nvim-web-devicons"]
lazy = 0
hook_add = '''
lua << EOF
require("nvim-tree").setup {}
EOF
'''

[[plugins]]
repo = "akinsho/bufferline.nvim"
depends = ["nvim-tree/nvim-web-devicons"]

[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = 'InsertEnter'
depends = ['denops.vim']
hook_source = '''
  call ddc#custom#patch_global('ui', 'native')
  call ddc#custom#patch_global('sources', ['lsp', 'around'])
  call ddc#custom#patch_global('sourceOptions', {
        \ '_': {
        \   'matchers': ['matcher_head'],
        \   'sorters': ['sorter_rank']},
        \ 'around': {
        \   'mark': 'around' },
        \ 'nvim-lsp': {
        \   'mark': 'lsp',
        \   'forceCompletionPattern': '\.\w*|:\w*|->\w*' },
        \ })
  call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-lsp'
on_source = 'ddc.vim'
hook_add = '''
lua << EOF
local ddc = vim.fn

-- LSPのcapabilitiesを作成し、denolsに適用
local capabilities = require("ddc_source_lsp").make_client_capabilities()
require("lspconfig").denols.setup({
  capabilities = capabilities,
})

-- ddc.vim の設定
ddc["ddc#custom#patch_global"]("sources", { "lsp" })
ddc["ddc#custom#patch_global"]("sourceOptions", {
  lsp = {
    mark = "lsp",
    forceCompletionPattern = "\\.\\w*|:\\w*|->\\w*",
  },
})

ddc["ddc#custom#patch_global"]("sourceParams", {
  lsp = {
    snippetEngine = vim.fn["denops#callback#register"](function(body)
      return vim.fn["vsnip#anonymous"](body)
    end),
    enableResolveItem = true,
    enableAdditionalTextEdit = true,
  },
})

-- ddcを有効化
ddc["ddc#enable"]()

EOF
'''

[[plugins]]
repo = "neovim/nvim-lspconfig"
hook_source = '''
lua << EOF
local lspconfig = require("lspconfig")

lspconfig.ts_ls.setup {
  settings = {
    -- TypeScript の LSP 設定
  },
}

lspconfig.efm.setup {
  init_options = { documentFormatting = true },
  filetypes = { "lua" },  -- Lua ファイルに適用
  settings = {
    rootMarkers = { ".git/" },
    languages = {
      lua = {
        { formatCommand = "stylua -g '*.lua' -g '!*.spec.lua' -- .", formatStdin = true }
      }
    }
  }
}
EOF
'''

[[plugins]]
repo = 'Shougo/ddc-ui-native'
on_source = 'ddc.vim'
